Index: vcglib/wrap/io_trimesh/import_stl.h
===================================================================
--- vcglib.orig/wrap/io_trimesh/import_stl.h	2015-04-14 11:42:13.285069787 +0200
+++ vcglib/wrap/io_trimesh/import_stl.h	2015-04-14 11:46:37.490379910 +0200
@@ -101,7 +101,8 @@
     return false;
    FILE *fp = fopen(filename, "rb");
    char buf[STL_LABEL_SIZE+1];
-   fread(buf,sizeof(char),STL_LABEL_SIZE,fp);
+   size_t res0; 
+   res0 = fread(buf,sizeof(char),STL_LABEL_SIZE,fp);
    std::string strInput(buf);
    size_t cInd = strInput.rfind("COLOR=");
    size_t mInd = strInput.rfind("MATERIAL=");
@@ -110,16 +111,17 @@
    else
      magicsMode = false;
    int facenum;
-   fread(&facenum, sizeof(int), 1, fp);
+   
+   res0 = fread(&facenum, sizeof(int), 1, fp);
 
    for(int i=0;i<std::min(facenum,1000);++i)
    {
      unsigned short attr;
      Point3f norm;
      Point3f tri[3];
-     fread(&norm,sizeof(Point3f),1,fp);
-     fread(&tri,sizeof(Point3f),3,fp);
-     fread(&attr,sizeof(unsigned short),1,fp);
+     res0 = fread(&norm,sizeof(Point3f),1,fp);
+     res0 = fread(&tri,sizeof(Point3f),3,fp);
+     res0 = fread(&attr,sizeof(unsigned short),1,fp);
      if(attr!=0)
      {
       if(Color4b::FromUnsignedR5G5B5(attr) != Color4b(Color4b::White))
@@ -138,13 +140,15 @@
   fseek(fp, 0, SEEK_END);
   int file_size = ftell(fp);
   int facenum;
+  size_t res0;
   /* Check for binary or ASCII file */
   fseek(fp, STL_LABEL_SIZE, SEEK_SET);
-  fread(&facenum, sizeof(int), 1, fp);
+  res0 = fread(&facenum, sizeof(int), 1, fp);
   int expected_file_size=STL_LABEL_SIZE + 4 + (sizeof(short)+sizeof(STLFacet) )*facenum ;
   if(file_size ==  expected_file_size) binary = true;
   unsigned char tmpbuf[128];
-  fread(tmpbuf,sizeof(tmpbuf),1,fp);
+  size_t res0;
+  res0 = fread(tmpbuf,sizeof(tmpbuf),1,fp);
   for(unsigned int i = 0; i < sizeof(tmpbuf); i++)
     {
       if(tmpbuf[i] > 127)
@@ -185,7 +189,7 @@
 
   int facenum;
   fseek(fp, STL_LABEL_SIZE, SEEK_SET);
-  fread(&facenum, sizeof(int), 1, fp);
+  res0 = fread(&facenum, sizeof(int), 1, fp);
 
   m.Clear();
   FaceIterator fi=Allocator<OpenMeshType>::AddFaces(m,facenum);
@@ -196,9 +200,9 @@
       unsigned short attr;
       Point3f norm;
       Point3f tri[3];
-      fread(&norm,sizeof(Point3f),1,fp);
-      fread(&tri,sizeof(Point3f),3,fp);
-      fread(&attr,sizeof(unsigned short),1,fp);
+      res0 = fread(&norm,sizeof(Point3f),1,fp);
+      res0 = fread(&tri,sizeof(Point3f),3,fp);
+      res0 = fread(&attr,sizeof(unsigned short),1,fp);
       if(tri::HasPerFaceColor(m) && (loadMask & Mask::IOM_FACECOLOR) )
       {
         if(magicsMode) (*fi).C()= Color4b::FromUnsignedR5G5B5(attr);
