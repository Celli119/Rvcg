Index: vcglib/vcg/space/index/spatial_hashing.h
===================================================================
--- vcglib.orig/vcg/space/index/spatial_hashing.h	2015-10-19 10:47:06.622509280 +0200
+++ vcglib/vcg/space/index/spatial_hashing.h	2015-10-19 11:32:49.240109186 +0200
@@ -26,11 +26,11 @@
 
 #include <vcg/space/index/grid_util.h>
 #include <vcg/space/index/grid_closest.h>
-#include<unordered_map>
+//#include<unordered_map>
 //#include <map>
 #include <vector>
 #include <algorithm>
-
+#include <hashfix.h>
 namespace vcg{
 
 
@@ -82,7 +82,7 @@
     // the hash index directly the grid structure.
     // We use a MultiMap because we need to store many object (faces) inside each cell of the grid.
 
-    typedef typename std::unordered_multimap<Point3i, ObjType *, HashFunctor> HashType;
+    typedef typename STDEXT::unordered_multimap<Point3i, ObjType *, HashFunctor> HashType;
     typedef typename HashType::iterator HashIterator;
     HashType hash_table; // The real HASH TABLE **************************************
 
Index: vcglib/vcg/complex/algorithms/clustering.h
===================================================================
--- vcglib.orig/vcg/complex/algorithms/clustering.h	2015-10-19 10:47:06.622509280 +0200
+++ vcglib/vcg/complex/algorithms/clustering.h	2015-10-19 11:58:36.407781176 +0200
@@ -33,8 +33,10 @@
 #include <iostream>
 #include <math.h>
 #include <limits>
-#include <unordered_set>
+/*#include <unordered_set>
 #include <unordered_map>
+*/
+#include <hashfix.h>
 
 namespace std
 {
