Index: vcg/complex/used_types.h
===================================================================
--- vcg/complex/used_types.h	(revision 5204)
+++ vcg/complex/used_types.h	(working copy)
@@ -90,6 +90,6 @@
 struct _Face  : public  Face<_UsedTypes>{};
 struct _HEdge : public  HEdge<_UsedTypes>{};
 
-};
+}
 
 #endif // USED_TYPES_H
Index: vcg/space/intersection3.h
===================================================================
--- vcg/space/intersection3.h	(revision 5204)
+++ vcg/space/intersection3.h	(working copy)
@@ -121,7 +121,7 @@
             solution_count++;
         }
         return solution_count;
-    }; // end of IntersectionSegmentSphere
+    } // end of IntersectionSegmentSphere
 
 
     /*!
@@ -215,7 +215,7 @@
         penetration_detected = (witness.SquaredNorm() <= (radius*radius));
         witness += center;
         return penetration_detected;
-    }; //end of IntersectionSphereTriangle
+    } //end of IntersectionSphereTriangle
 
   /// intersection between line and plane
   template<class T>
Index: vcg/complex/algorithms/create/mc_lookup_table.h
===================================================================
--- vcg/complex/algorithms/create/mc_lookup_table.h	(revision 5204)
+++ vcg/complex/algorithms/create/mc_lookup_table.h	(working copy)
@@ -2552,8 +2552,8 @@
 			//_____________________________________________________________________________
 
 		}; // end of class EMCLookUpTable
-	}; // end of namespace tri
-}; //end of namespace vcg
+	} // end of namespace tri
+} //end of namespace vcg
 
 
 
Index: vcg/complex/algorithms/create/emc_lookup_table.h
===================================================================
--- vcg/complex/algorithms/create/emc_lookup_table.h	(revision 5204)
+++ vcg/complex/algorithms/create/emc_lookup_table.h	(working copy)
@@ -923,6 +923,6 @@
 			//=============================================================================
 
 		}; //end of class EMCLookUpTable
-	}; // end of namespace tri
-}; // end of namespace vcg
+	} // end of namespace tri
+} // end of namespace vcg
 #endif // __VCG_EMC_LOOK_UP_TABLE
Index: vcg/complex/algorithms/create/extended_marching_cubes.h
===================================================================
--- vcg/complex/algorithms/create/extended_marching_cubes.h	(revision 5204)
+++ vcg/complex/algorithms/create/extended_marching_cubes.h	(working copy)
@@ -32,7 +32,7 @@
 #include <vcg/complex/algorithms/update/topology.h>
 #include <vcg/complex/algorithms/clean.h>
 #include "emc_lookup_table.h"
-#include <eigenlib/Eigen/SVD>
+#include <Eigen/SVD>
 
 namespace vcg
 {
@@ -248,7 +248,7 @@
             TRIMESH_TYPE	*_mesh;
             /*!
             */
-            bool	_initialized;;
+            bool	_initialized;
             /*!
             */
             bool	_finalized;
@@ -464,6 +464,6 @@
         // end of Doxygen documentation
 
     } // end of namespace tri
-}; // end of namespace vcg
+} // end of namespace vcg
 
 #endif // __VCG_EXTENDED_MARCHING_CUBES
Index: vcg/complex/algorithms/create/mc_trivial_walker.h
===================================================================
--- vcg/complex/algorithms/create/mc_trivial_walker.h	(revision 5204)
+++ vcg/complex/algorithms/create/mc_trivial_walker.h	(working copy)
@@ -198,7 +198,7 @@
         extractor.Finalize();
         _volume = NULL;
         _mesh		= NULL;
-    };
+    }
 
     float V(int pi, int pj, int pk)
     {
Index: wrap/ply/plylib.cpp
===================================================================
--- wrap/ply/plylib.cpp	(revision 5204)
+++ wrap/ply/plylib.cpp	(working copy)
@@ -3673,6 +3673,6 @@
 		output[io++]=a[ia++]; 
 	};
 	output[io]=0;
-};
+}
 } 
 }
